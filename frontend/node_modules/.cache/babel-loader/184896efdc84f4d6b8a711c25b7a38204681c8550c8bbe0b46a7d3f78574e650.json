{"ast":null,"code":"import{Chart as ChartJS,ArcElement,Tooltip,Legend}from'chart.js';ChartJS.register(ArcElement,Tooltip,Legend);export const createPieChartData=breakdown=>{const labels=Object.keys(breakdown);const data=Object.values(breakdown).map(value=>parseInt(value.replace('₹','').replace(',','')));return{labels,datasets:[{data,backgroundColor:['rgba(255, 99, 132, 0.6)','rgba(54, 162, 235, 0.6)','rgba(255, 206, 86, 0.6)','rgba(75, 192, 192, 0.6)','rgba(153, 102, 255, 0.6)','rgba(255, 159, 64, 0.6)','rgba(199, 199, 199, 0.6)','rgba(83, 102, 255, 0.6)','rgba(40, 159, 64, 0.6)'],borderColor:['rgba(255, 99, 132, 1)','rgba(54, 162, 235, 1)','rgba(255, 206, 86, 1)','rgba(75, 192, 192, 1)','rgba(153, 102, 255, 1)','rgba(255, 159, 64, 1)','rgba(199, 199, 199, 1)','rgba(83, 102, 255, 1)','rgba(40, 159, 64, 1)'],borderWidth:1}]};};","map":{"version":3,"names":["Chart","ChartJS","ArcElement","Tooltip","Legend","register","createPieChartData","breakdown","labels","Object","keys","data","values","map","value","parseInt","replace","datasets","backgroundColor","borderColor","borderWidth"],"sources":["C:/Users/sanke/Desktop/krishi-Ai/Krishi-AI/frontend/src/chartConfig.js"],"sourcesContent":["import { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\r\n\r\nChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\nexport const createPieChartData = (breakdown) => {\r\n  const labels = Object.keys(breakdown);\r\n  const data = Object.values(breakdown).map(value => parseInt(value.replace('₹', '').replace(',', '')));\r\n  return {\r\n    labels,\r\n    datasets: [{\r\n      data,\r\n      backgroundColor: [\r\n        'rgba(255, 99, 132, 0.6)',\r\n        'rgba(54, 162, 235, 0.6)',\r\n        'rgba(255, 206, 86, 0.6)',\r\n        'rgba(75, 192, 192, 0.6)',\r\n        'rgba(153, 102, 255, 0.6)',\r\n        'rgba(255, 159, 64, 0.6)',\r\n        'rgba(199, 199, 199, 0.6)',\r\n        'rgba(83, 102, 255, 0.6)',\r\n        'rgba(40, 159, 64, 0.6)',\r\n      ],\r\n      borderColor: [\r\n        'rgba(255, 99, 132, 1)',\r\n        'rgba(54, 162, 235, 1)',\r\n        'rgba(255, 206, 86, 1)',\r\n        'rgba(75, 192, 192, 1)',\r\n        'rgba(153, 102, 255, 1)',\r\n        'rgba(255, 159, 64, 1)',\r\n        'rgba(199, 199, 199, 1)',\r\n        'rgba(83, 102, 255, 1)',\r\n        'rgba(40, 159, 64, 1)',\r\n      ],\r\n      borderWidth: 1,\r\n    }],\r\n  };\r\n};"],"mappings":"AAAA,OAASA,KAAK,GAAI,CAAAC,OAAO,CAAEC,UAAU,CAAEC,OAAO,CAAEC,MAAM,KAAQ,UAAU,CAExEH,OAAO,CAACI,QAAQ,CAACH,UAAU,CAAEC,OAAO,CAAEC,MAAM,CAAC,CAE7C,MAAO,MAAM,CAAAE,kBAAkB,CAAIC,SAAS,EAAK,CAC/C,KAAM,CAAAC,MAAM,CAAGC,MAAM,CAACC,IAAI,CAACH,SAAS,CAAC,CACrC,KAAM,CAAAI,IAAI,CAAGF,MAAM,CAACG,MAAM,CAACL,SAAS,CAAC,CAACM,GAAG,CAACC,KAAK,EAAIC,QAAQ,CAACD,KAAK,CAACE,OAAO,CAAC,GAAG,CAAE,EAAE,CAAC,CAACA,OAAO,CAAC,GAAG,CAAE,EAAE,CAAC,CAAC,CAAC,CACrG,MAAO,CACLR,MAAM,CACNS,QAAQ,CAAE,CAAC,CACTN,IAAI,CACJO,eAAe,CAAE,CACf,yBAAyB,CACzB,yBAAyB,CACzB,yBAAyB,CACzB,yBAAyB,CACzB,0BAA0B,CAC1B,yBAAyB,CACzB,0BAA0B,CAC1B,yBAAyB,CACzB,wBAAwB,CACzB,CACDC,WAAW,CAAE,CACX,uBAAuB,CACvB,uBAAuB,CACvB,uBAAuB,CACvB,uBAAuB,CACvB,wBAAwB,CACxB,uBAAuB,CACvB,wBAAwB,CACxB,uBAAuB,CACvB,sBAAsB,CACvB,CACDC,WAAW,CAAE,CACf,CAAC,CACH,CAAC,CACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}