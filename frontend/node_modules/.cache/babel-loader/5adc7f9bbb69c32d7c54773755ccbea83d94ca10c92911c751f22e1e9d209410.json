{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = \"http://localhost:5000\";\nexport const predictCosts = async formData => {\n  try {\n    const response = await axios.post(`${API_URL}/api/predict`, formData);\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    throw new Error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || \"Failed to predict costs\");\n  }\n};\nexport const recommendCrops = async formData => {\n  try {\n    const response = await axios.post(`${API_URL}/recommend`, formData);\n    return response.data;\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    throw new Error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || \"Failed to recommend crops\");\n  }\n};","map":{"version":3,"names":["axios","API_URL","predictCosts","formData","response","post","data","error","_error$response","_error$response$data","Error","recommendCrops","_error$response2","_error$response2$data"],"sources":["C:/Users/sanke/Desktop/krishi-Ai/Krishi-AI/frontend/src/services/api.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = \"http://localhost:5000\";\r\n\r\nexport const predictCosts = async (formData) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/api/predict`, formData);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error(error.response?.data?.error || \"Failed to predict costs\");\r\n  }\r\n};\r\n\r\nexport const recommendCrops = async (formData) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/recommend`, formData);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error(error.response?.data?.error || \"Failed to recommend crops\");\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,uBAAuB;AAEvC,OAAO,MAAMC,YAAY,GAAG,MAAOC,QAAQ,IAAK;EAC9C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,GAAGJ,OAAO,cAAc,EAAEE,QAAQ,CAAC;IACrE,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA,EAAAC,oBAAA;IACd,MAAM,IAAIC,KAAK,CAAC,EAAAF,eAAA,GAAAD,KAAK,CAACH,QAAQ,cAAAI,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBF,IAAI,cAAAG,oBAAA,uBAApBA,oBAAA,CAAsBF,KAAK,KAAI,yBAAyB,CAAC;EAC3E;AACF,CAAC;AAED,OAAO,MAAMI,cAAc,GAAG,MAAOR,QAAQ,IAAK;EAChD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,GAAGJ,OAAO,YAAY,EAAEE,QAAQ,CAAC;IACnE,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAK,gBAAA,EAAAC,qBAAA;IACd,MAAM,IAAIH,KAAK,CAAC,EAAAE,gBAAA,GAAAL,KAAK,CAACH,QAAQ,cAAAQ,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBN,IAAI,cAAAO,qBAAA,uBAApBA,qBAAA,CAAsBN,KAAK,KAAI,2BAA2B,CAAC;EAC7E;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}