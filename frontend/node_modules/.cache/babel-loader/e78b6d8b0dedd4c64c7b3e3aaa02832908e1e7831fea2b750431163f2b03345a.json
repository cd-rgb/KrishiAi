{"ast":null,"code":"import { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nChartJS.register(ArcElement, Tooltip, Legend);\nexport const createPieChartData = breakdown => {\n  const labels = Object.keys(breakdown);\n  const data = Object.values(breakdown).map(value => parseInt(value.replace('₹', '').replace(',', '')));\n  return {\n    labels,\n    datasets: [{\n      data,\n      backgroundColor: ['rgba(255, 99, 132, 0.6)', 'rgba(54, 162, 235, 0.6)', 'rgba(255, 206, 86, 0.6)', 'rgba(75, 192, 192, 0.6)', 'rgba(153, 102, 255, 0.6)', 'rgba(255, 159, 64, 0.6)', 'rgba(199, 199, 199, 0.6)', 'rgba(83, 102, 255, 0.6)', 'rgba(40, 159, 64, 0.6)'],\n      borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)', 'rgba(199, 199, 199, 1)', 'rgba(83, 102, 255, 1)', 'rgba(40, 159, 64, 1)'],\n      borderWidth: 1\n    }]\n  };\n};","map":{"version":3,"names":["Chart","ChartJS","ArcElement","Tooltip","Legend","register","createPieChartData","breakdown","labels","Object","keys","data","values","map","value","parseInt","replace","datasets","backgroundColor","borderColor","borderWidth"],"sources":["C:/Users/sanke/Desktop/krishi-Ai/Krishi-AI/frontend/src/chartConfig.js"],"sourcesContent":["import { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\r\n\r\nChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\nexport const createPieChartData = (breakdown) => {\r\n  const labels = Object.keys(breakdown);\r\n  const data = Object.values(breakdown).map(value => parseInt(value.replace('₹', '').replace(',', '')));\r\n  return {\r\n    labels,\r\n    datasets: [{\r\n      data,\r\n      backgroundColor: [\r\n        'rgba(255, 99, 132, 0.6)',\r\n        'rgba(54, 162, 235, 0.6)',\r\n        'rgba(255, 206, 86, 0.6)',\r\n        'rgba(75, 192, 192, 0.6)',\r\n        'rgba(153, 102, 255, 0.6)',\r\n        'rgba(255, 159, 64, 0.6)',\r\n        'rgba(199, 199, 199, 0.6)',\r\n        'rgba(83, 102, 255, 0.6)',\r\n        'rgba(40, 159, 64, 0.6)',\r\n      ],\r\n      borderColor: [\r\n        'rgba(255, 99, 132, 1)',\r\n        'rgba(54, 162, 235, 1)',\r\n        'rgba(255, 206, 86, 1)',\r\n        'rgba(75, 192, 192, 1)',\r\n        'rgba(153, 102, 255, 1)',\r\n        'rgba(255, 159, 64, 1)',\r\n        'rgba(199, 199, 199, 1)',\r\n        'rgba(83, 102, 255, 1)',\r\n        'rgba(40, 159, 64, 1)',\r\n      ],\r\n      borderWidth: 1,\r\n    }],\r\n  };\r\n};"],"mappings":"AAAA,SAASA,KAAK,IAAIC,OAAO,EAAEC,UAAU,EAAEC,OAAO,EAAEC,MAAM,QAAQ,UAAU;AAExEH,OAAO,CAACI,QAAQ,CAACH,UAAU,EAAEC,OAAO,EAAEC,MAAM,CAAC;AAE7C,OAAO,MAAME,kBAAkB,GAAIC,SAAS,IAAK;EAC/C,MAAMC,MAAM,GAAGC,MAAM,CAACC,IAAI,CAACH,SAAS,CAAC;EACrC,MAAMI,IAAI,GAAGF,MAAM,CAACG,MAAM,CAACL,SAAS,CAAC,CAACM,GAAG,CAACC,KAAK,IAAIC,QAAQ,CAACD,KAAK,CAACE,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAACA,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC;EACrG,OAAO;IACLR,MAAM;IACNS,QAAQ,EAAE,CAAC;MACTN,IAAI;MACJO,eAAe,EAAE,CACf,yBAAyB,EACzB,yBAAyB,EACzB,yBAAyB,EACzB,yBAAyB,EACzB,0BAA0B,EAC1B,yBAAyB,EACzB,0BAA0B,EAC1B,yBAAyB,EACzB,wBAAwB,CACzB;MACDC,WAAW,EAAE,CACX,uBAAuB,EACvB,uBAAuB,EACvB,uBAAuB,EACvB,uBAAuB,EACvB,wBAAwB,EACxB,uBAAuB,EACvB,wBAAwB,EACxB,uBAAuB,EACvB,sBAAsB,CACvB;MACDC,WAAW,EAAE;IACf,CAAC;EACH,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}